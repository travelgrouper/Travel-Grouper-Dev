January 5th, 2011 3:23PM
At this point this app has demonstrated the following lessons to me:

-how to utilize omniauth to create a connection to Facebook
    -how to modify /initializers/omniauth.rb to include OAuth credentials and permissions
    -how to interpret the array returned by omniauth to circumvent nil returns on [email] and [location]
    -how to use the uid to fetch the profile picture

-how to code the current user's variables into a profile view page

-how to manipulate routes.rb to handle the callback function from Facebook

-how to destroy cookies upon user deletion (redirect_to signout_path in destroy method in app/controllers/users_controller.rb)

-how to manipulate views to generate link tags with string interpolation and attach to images

To Do:
-Add token capture and exchange to allow Facebook transactions/Javascript embedding
-Use/require authentication in models and render different views if authenticated (i.e. splash page then main page)
-Determine session timetable; currently authentication expires upon browser close or sign out.
-Recognize limitations of user model, and devise a method to update user parameters from Facebook.
    -Currently, if I change a parameter the program will not recognize (except profile picture) as it only writes user data on creation.
    -Idea: Use last modified at attribute to check and force an update script at predetermined date (i.e. 7 days)
-Current profile pic produces thumbnail, look for way to reproduce full size pic for internal profile page
-Enable testing for at least the non-authorization components of code
-Require email validation from facebook to create user

